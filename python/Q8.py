import unittest
from itertools import *
from functools import *
import operator

class Test(unittest.TestCase):

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def test_method(self):
        self.assertEqual(1*2*3*4*5, largest_consecutive_product_in('12345'))
        self.assertEqual(6*2*3*4*5, largest_consecutive_product_in('123456'))
        self.assertEqual(9*9*9*9*9, largest_consecutive_product_in('999991234132512341252134'))


def largest_consecutive_product_in(input):
    buffer = list(map(int, islice(input,5)))
    current_product = reduce(operator.mul, buffer)
    max_so_far = current_product

    for index in range(5, len(input)):
        next_digit = int(input[index])
        current_product /= buffer[index%5]
        current_product *= next_digit 
        buffer[index%5] = next_digit
        max_so_far = max(max_so_far, current_product)
    return max_so_far

input = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
if __name__ == '__main__':
    print(largest_product_in_series(input))
    unittest.main()